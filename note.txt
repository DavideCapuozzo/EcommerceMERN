LIBRERIA GIGANTE CHE CONTIENE MOLTISSIMI COMPONENTI GIA PREFATTI INSTALLABILI FACILMENTE, IL PROGETTO SARA BASATO INTERAMENTE SU QUESTA LIBRERIA
(il bootstrap di react)
Puoi seguire l'installazione guidata direttamente da questo sito per creare la parte frontend del sito
https://ui.shadcn.com/docs/installation/vite


use backend:
bcryptjs
cookie-parser
cloudinary
cors
dotenv
express
jsonwebtoken
moongose
multer
npm
nodemon

il progetto sarà diciso in due sezioni:
client
server

----------------------------------------------------------------------------------------------------------------------------------------------
################################### SERVER GUIDE ##########################################################################

partiamo col sviluppare la parte server:
ci posizioniamo sulla cartella di interesse e lanciamo il comando

npm init -y

usiamo questo comando per inizzializzare il nostro progetto
una volta concluso andiamo a installare tutte le librerie utili

npm i bcryptjs cloudinary cookie-parser cors dotenv express jsonwebtoken mongoose multer nodemon

GITIGNORE
una volta installate le dipendenze utili andrò ad escludere tutto
cio che non voglio pushare su git hub. lo facci otrmite il file .gitignore
inizialmente lo imposteremo in questo modo

# ignore dependeci
node_modules/

# ignore file
.env

ENTRY POINT server.js
vado a creare nella cartella server il file server.js

---------------------------------------------------------
CREO UN DATABASE SU MONGO DB 
devsoloweb
7D88lQY9Shdz5zVl

vado ad impostare la connessione nel mio file server.js:

require('dotenv').config();// Carica le variabili dal file .env
const express = require('express')
const mongoose = require('mongoose');
const cookieParser = require('cookie-parser'); //Un middleware che analizza i cookie inviati dal client al server.
const cors = require('cors'); //Un middleware che gestisce il Cross-Origin Resource Sharing, permettendo ad applicazioni in altri domini di comunicare con il server.


const URI_MONGO = process.env.URI_MONGO; // Usa la variabile di ambiente

mongoose.connect(URI_MONGO).then(()=>console.log('MongoDB Connected')).catch((error)=> console.log(error));

const app = express()
const PORT = process.env.PORT || 5000;

app.use( //Metodo per aggiungere middleware all'applicazione
    cors({
        origin : 'http://localhost:5173/',
        methods : ['GET', 'POST', 'DELATE', 'PUT'],
        allowedHeaders : [
            "Content-Type",
            "Auttorization",
            "Cache-Control",
            "Expires",
            "Pragma"
        ],
        credentials : true
    }) //Aggiunge il supporto per le richieste Cross-Origin. L'oggetto vuoto {} indica che tutte le origini sono permesse.
)

app.use(cookieParser);
app.use(express.json());

app.listen(PORT, ()=> console.log(`Server is now running on port ${PORT}`))

----------------------------------------------------------------------------------------------------------------------------------------------
################################### CLIENT GUIDE ##########################################################################

CLIENT folder
nel frattempo creo la cartella client dove andrò ad installare react con vite
mi reco sul sito di vite e seguo i passaggi per l'installazione che mi permetterà di creare la cartella client

Ora vado ad installare i tool utili per react
npm i @reduxjs/toolkit react-redux axios react-router-dom

npm install tailwindcss postcss autoprefixer
npx tailwindcss init -p

installiamo la libreria dei COMPONENTI
npx shadcn@latest init

testiamo l'installazione di un componente
npx shadcn@latest add button
-------------------------------------------------------------------------------------------------------------------------------------------

min 34.00
